@page "/def/{word}"
@inject HttpClient Http
@inject DefinitionService DefinitionService
@inject NavigationManager NavigationManager
@using Models
@using Services;
@using ZXing;

<div class="animate__animated animate__fadeIn">
    <MudItem xs="12" Style="margin: 0% 5%;">

    @if (definition != null)
    {
         <div style="text-align: center; margin: 1%;">
            <MudBarcode @ref="_barcode" @bind-Value="qrString" Width="100" Height="100" BarcodeFormat="BarcodeFormat.QR_CODE" Color="black" />
            <MudText Style="font-size: 5.5vh;" Color="Color.Primary" Align="Align.Center">@definition.Title</MudText>

        </div>

        @if (definition.Tags != null)
        {
                <div style="text-align: justify; margin: 1%">
                @foreach (var tag in definition.Tags)
                {
                    <MudChip Icon="@Icons.Material.Filled.Tag" Color="Color.Primary">@tag.Name</MudChip>
                    <MudChip Icon="@Icons.Material.Filled.Category" Color="Color.Secondary">@tag.Category</MudChip>
                }
            </div>
        }

        if (definition.HtmlDef != null)
        {
            <MudText Align="Align.Center" Style="font-size: 2.1vh; text-align: justify; margin: 1%">
                @((MarkupString)definition.HtmlDef)
            </MudText>
        }

        if (definition.Refs != null)
        {
                <div style="text-align: justify; margin: 1%">
                @foreach (var r in definition.Refs)
                {
                        <MudChip Icon=@Icons.Material.Filled.Link Color="Color.Success" Target="_blank" Href="@r.Url" Style="text-align: justify;">@r.Title</MudChip>
                }
            </div>
        }

        if (definition.Imgs != null)
        {
            <div style="display: flex; justify-content: center; margin: 1%">
                    <MudGallery @ref="_gallery" ImageSource="imageSource()" ItemPerLine="5" MaxWidth="MaxWidth.Large">
                        <ToolboxTopContent>
                            <MudText Class="white-text pa-4">@(definition.Imgs[_gallery!.GetSelectedImageIndex()].Title)</MudText>
                        </ToolboxTopContent>
                </MudGallery>
                </div>
            }
        }
        else
        {
            <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Secondary">Término no '@word' encontrado 😧</MudText>
        }

</MudItem>
</div>
@code {

    [Parameter]
    public string? word { get; set; }
    public string? qrString { get; set; }
    private MudBarcode? _barcode;
    private Definition? definition;
    private MudGallery? _gallery;

    protected override async Task OnParametersSetAsync()
    {
        await DefinitionService.LoadDefinitionsAsync();
        var definitions = DefinitionService.Definitions;
        if (definitions!=null)
            definition = definitions.FirstOrDefault(d => d.Key == word);
        qrString = $"{NavigationManager.Uri}";
    }

    private List<string> imageSource()
    {
        return definition!.Imgs!.Select(i=>i.Url!).ToList();
    }

}
